# database init, supports mysql too
database=h2
spring.sql.init.schema-locations=classpath*:db/${database}/schema.sql
spring.sql.init.data-locations=classpath*:db/${database}/data.sql

# Web
spring.thymeleaf.mode=HTML

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=true

# Internationalization
spring.messages.basename=messages/messages

# Actuator
management.endpoints.web.exposure.include=*

# Logging
logging.level.org.springframework=INFO
# logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.context.annotation=TRACE

# Maximum time static resources should be cached
spring.web.resources.cache.cachecontrol.max-age=12h

dekorate.jib.from=adoptopenjdk/openjdk11
dekorate.jib.image=quay.io/rhdevelopers/spring-petclinic:2.0.0
dekorate.jib.registry=quay.io
dekorate.jib.group=rhdevelopers
dekorate.jib.name=spring-petclinic
dekorate.jib.version=2.0.0

dekorate.kubernetes.replicas=3
dekorate.kubernetes.expose=true

dekorate.knative.name=kspring-petclinic
dekorate.knative.revision-auto-scaling.autoscaler-class=hpa
dekorate.knative.revision-auto-scaling.metric=rps
dekorate.knative.global-auto-scaling.requests-per-second=100

dekorate.helm.name=hspring-petclinic
dekorate.helm.values[0].property=type
dekorate.helm.values[0].paths=(kind == Service).spec.type
dekorate.helm.values[1].property=secretRef
dekorate.helm.values[1].paths=(kind == Deployment).spec.template.spec.containers.envFrom.secretRef.name

dekorate.tekton.source-workspace-claim.name=claim-mine
dekorate.tekton.source-workspace-claim.match-labels[0].key=foo
dekorate.tekton.source-workspace-claim.match-labels[0].value=bar
